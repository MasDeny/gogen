package restapi

import (
	"context"
	"net/http"

	"github.com/gin-gonic/gin"
	"github.com/jinzhu/copier"

	"{{.PackagePath}}/usecases/{{.UsecaseName}}/inport"
)

// {{PascalCase .UsecaseName}} ...
func {{PascalCase .UsecaseName}}(inputPort inport.{{PascalCase .UsecaseName}}) gin.HandlerFunc {

	type dtoRequest struct { 
		Name  string  `json:"name"`  //
		Price float64 `json:"price"` //
	}

	return func(c *gin.Context) {

		// receive json
		var jsonReq dtoRequest
		if err := c.BindJSON(&jsonReq); err != nil {
			c.JSON(http.StatusBadRequest, err.Error())
			return
		}

		// convert to request
		var req inport.{{PascalCase .UsecaseName}}Request
		if err := copier.Copy(&req, jsonReq); err != nil {
			c.JSON(http.StatusBadRequest, err.Error())
			return
		}

		// run the usecase
		res, err := inputPort.Handle(context.Background(), req)
		if err != nil {
			c.JSON(http.StatusBadRequest, err.Error())
			return
		}

		// return the response
		c.JSON(http.StatusOK, res)

	}
}
