package registry

import (
	"fmt"
	"{{.PackagePath}}/application"	
	"{{.PackagePath}}/controller"
	"{{.PackagePath}}/infrastructure/server"	
)

type {{CamelCase .RegistryName}}Registry struct {
	server.HTTPHandler
}

func New{{PascalCase .RegistryName}}Registry() application.RegistryContract {

	// config.InitConfig("config-default", ".")
	// serverPort := config.GetInt("server.port", 8080)
	serverPort := 8080

	// log.UseRotateFile(
	// 	config.GetString("logfile.path", "."),
	// 	config.GetString("logfile.name", "defaultservice"),
	// 	config.GetInt("logfile.age", 14),
	// )

	app := defaultRegistry{ //
		HTTPHandler: server.NewHTTPHandler(fmt.Sprintf(":%d", serverPort)),
	}

	return &app

}

// RegisterUsecase is implementation of RegistryContract.RegisterUsecase()
func (r *{{CamelCase .RegistryName}}Registry) RegisterUsecase() {
}
