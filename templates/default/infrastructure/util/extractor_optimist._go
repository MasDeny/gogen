package util

import (
	"encoding/json"
)

// MustMSIFromMSI (MSI is Map String Interface) is getting map[string]interface{} from another map[string]interface{} by some key
// Warning! this function will always assume the convertion is success
// if you are not sure the convertion is always succeed then use GetMSIFromMSI
func MustMSIFromMSI(input map[string]interface{}, key string) map[string]interface{} {
	objIntf := input[key]
	return MustMSIFromInterface(objIntf)
}

// MustAOIFromMSI (AOI is Array Of Interface and MSI is Map String Interface) is getting []interface{} from map[string]interface by some key
// Warning! this function will always assume the convertion is success
// if you are not sure the convertion is always succeed then use GetAOIFromMSI
func MustAOIFromMSI(input map[string]interface{}, key string) []interface{} {
	objArrIntf := input[key].([]interface{})
	return objArrIntf
}

// MustMSIFromInterface (MSI is Map String Interface) is converter from interface{} to map[string]interface{}
// Warning! this function will always assume the convertion is success
// if you are not sure the convertion is always succeed then use GetMSIFromInterface
func MustMSIFromInterface(input interface{}) map[string]interface{} {
	obj := input.(map[string]interface{})
	return obj
}

// MustMSIFromJSONString is (MSI is Map String Interface) is getting map[string]interface{} from json string
// Warning! this function will always assume the convertion is success
// if you are not sure the convertion is always succeed then use GetMSIFromJSONString
func MustMSIFromJSONString(bytes []byte) map[string]interface{} {
	var obj interface{}
	_ = json.Unmarshal(bytes, &obj)
	return MustMSIFromInterface(obj)
}

// MustString is get string from map string interface
// Warning! this function will always assume the convertion is success
// if you are not sure the convertion is always succeed then use GetString
func MustString(input map[string]interface{}, key string) string {
	str := input[key].(string)
	return str
}

// MustInt is get int from map string interface
// Warning! this function will always assume the convertion is success
// if you are not sure the convertion is always succeed then use GetInt
func MustInt(input map[string]interface{}, key string) int {
	floatValue := input[key].(float64)
	return int(floatValue)
}

// MustFloat is get float64 from map string interface
// Warning! this function will always assume the convertion is success
// if you are not sure the convertion is always succeed then use GetFloat
func MustFloat(input map[string]interface{}, key string) float64 {
	floatValue := input[key].(float64)
	return floatValue
}

// MustBool is get bool from map string interface
// Warning! this function will always assume the convertion is success
// if you are not sure the convertion is always succeed then use GetBool
func MustBool(input map[string]interface{}, key string) bool {
	boolValue := input[key].(bool)
	return boolValue
}

// MustJSON is converter from interface{} to string
// Warning! this function will always assume the convertion is success
// if you are not sure the convertion is always succeed then use ToJSON
func MustJSON(obj interface{}) string {
	bytes, _ := json.Marshal(obj)
	return string(bytes)
}
