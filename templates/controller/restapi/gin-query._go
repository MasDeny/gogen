package restapi

import (
	"context"
	"net/http"

	"github.com/gin-gonic/gin"
	"github.com/jinzhu/copier"

	"{{.PackagePath}}/usecase/{{LowerCase .UsecaseName}}/port"
)

// {{PascalCase .UsecaseName}} ...
func {{PascalCase .UsecaseName}}(inputPort port.{{PascalCase .UsecaseName}}Inport) gin.HandlerFunc {

	type dtoResponse struct { {{range .InportResponseFields}}
		{{.Name}} {{.Type}} `json:"{{CamelCase .Name}}"` // {{end}}
	}

	return func(c *gin.Context) {

		{{range .InportRequestFields}}
		// {{CamelCase .Name}}Value := c.DefaultQuery("{{CamelCase .Name}}", "") {{end}}

		// assign value from query to request object
		var req port.{{PascalCase .UsecaseName}}Request
		{ {{range .InportRequestFields}}
			// req.{{PascalCase .Name}} = {{CamelCase .Name}}Value {{end}}
		}

		// run the usecase
		res, err := inputPort.HandleQuery(context.Background(), req)
		if err != nil {
			c.JSON(http.StatusBadRequest, err.Error())
			return
		}

		var jsonRes dtoResponse
		if err := copier.Copy(&jsonRes, res); err != nil {
			c.JSON(http.StatusBadRequest, err.Error())
			return
		}

		// return the response
		c.JSON(http.StatusOK, jsonRes)

	}
}
