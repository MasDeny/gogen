package interactor

import (
	"context"

	"{{.PackagePath}}/usecases/{{PascalCase .Name}}/inport"
	"{{.PackagePath}}/usecases/{{PascalCase .Name}}/outport"
)

// New{{PascalCase .Name}} ...
func New{{PascalCase .Name}}(outputPort outport.{{PascalCase .Name}}) inport.{{PascalCase .Name}} {
	return &{{CamelCase .Name}}Usecase{
		dataSource: outputPort,
	}
}

type {{CamelCase .Name}}Usecase struct {
	dataSource outport.{{PascalCase .Name}}
}

// Handle ...
func (_r *{{CamelCase .Name}}Usecase) Handle(ctx context.Context, req inport.{{PascalCase .Name}}Request) (*inport.{{PascalCase .Name}}Response, error) {

	{
		_, err := _r.dataSource.GetData(ctx, outport.GetDataRequest{ //
			SomeID: 20,
		})
		if err != nil {
			return nil, err
		}		
	} 

	{
		_, err := _r.dataSource.SaveData(ctx, outport.SaveDataRequest{ //
			Name  : "mirza",
			Price : 14,
		})
		if err != nil {
			return nil, err
		}		
	}

	return &inport.{{PascalCase .Name}}Response{//
	
	}, nil
}
