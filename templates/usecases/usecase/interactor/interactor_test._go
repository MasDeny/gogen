package interactor

import (
	"context"
	"testing"

	"{{.PackagePath}}/datasources/mocks"
	"{{.PackagePath}}/usecases/{{PascalCase .Name}}/inport"
	"{{.PackagePath}}/usecases/{{PascalCase .Name}}/outport"

	"github.com/stretchr/testify/assert"
)

// Test_{{PascalCase .Name}}_Normal ...
func Test_{{PascalCase .Name}}_Normal(t *testing.T) {

	ctx := context.Background()

	outputPort := mocks.{{PascalCase .Name}}{}
  {{range .Outports}}
	// GOGEN_MARKER_INTERACTOR_TEST_OUTPORT {{PascalCase .Name}}
	{
		outputPort.On("{{PascalCase .Name}}", ctx, outport.{{PascalCase .Name}}Request{ // 
		
		}).Return(&outport.{{PascalCase .Name}}Response{ //

		}, nil) 		
	}
  {{end}}
	
	// GOGEN_INJECTOR_INTERACTOR_TEST_OUTPORTS

	req := inport.{{PascalCase .Name}}Request{ //

	}
	
	res, err := New{{PascalCase .Name}}(&outputPort).Handle(ctx, req)

	assert.Nil(t, err)

	assert.Equal(t, &inport.{{PascalCase .Name}}Response{ // 
	
	}, res)

}
