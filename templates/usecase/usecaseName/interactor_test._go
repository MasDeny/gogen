package {{LowerCase .UsecaseName}}

import (
	"context"
	"testing"

	"{{.PackagePath}}{{.Directory}}/usecase/{{LowerCase .UsecaseName}}/mocks"
	"{{.PackagePath}}{{.Directory}}/usecase/{{LowerCase .UsecaseName}}/port"
	"github.com/stretchr/testify/assert"
)

func Test_{{PascalCase .UsecaseName}}_Normal(t *testing.T) {

	ctx := context.Background()

	outputPort := mocks.{{PascalCase .UsecaseName}}Outport{}
	{{range .Outports}}
	{
		call := outputPort.On("{{PascalCase .Name}}", ctx, port.{{PascalCase .Name}}Request{ // {{range .RequestFields}}
			// {{PascalCase .Name}}: ..., // helper field {{end}}
		})
		call.Return(&port.{{PascalCase .Name}}Response{ // {{range .ResponseFields}}
			// {{PascalCase .Name}}: ..., // helper field {{end}}
		}, nil)
	} {{end}}

	req := port.{{PascalCase .UsecaseName}}Request{ // {{range .InportRequestFields}}
		// {{.Name}}: ..., // helper field {{end}}
	}

	res, err := New{{PascalCase .UsecaseName}}Usecase(&outputPort).Handle(ctx, req)

	assert.Nil(t, err)

	assert.Equal(t, &port.{{PascalCase .UsecaseName}}Response{ // {{range .InportResponseFields}}
		// {{.Name}}: ..., // helper field {{end}}
	}, res)

}

