package {{LowerCase .UsecaseName}}

import (
	"context"
	"testing"

	"{{.PackagePath}}/usecase/{{LowerCase .UsecaseName}}/mocks"
	"{{.PackagePath}}/usecase/{{LowerCase .UsecaseName}}/port"
	"github.com/stretchr/testify/assert"
)

func Test_{{PascalCase .UsecaseName}}_Normal(t *testing.T) {

	ctx := context.Background()

	outputPort := mocks.{{PascalCase .UsecaseName}}Outport{} {{range .Outport}}
	{
		call := outputPort.On("{{PascalCase .MethodName}}", ctx, port.{{PascalCase .ParamType}}{ // {{range .RequestFields}}
			// {{PascalCase .FieldName}}: ..., {{end}}
		})
		call.Return(&port.{{PascalCase .ResultType}}{ // {{range .ResponseFields}}
			// {{PascalCase .FieldName}}: ..., {{end}}
		}, nil)
	} {{end}}

	res, err := New{{PascalCase .UsecaseName}}Usecase(&outputPort).Handle(ctx, port.{{PascalCase .Inport.ParamType}}{ // {{range .Inport.RequestFields}}
		// {{.FieldName}}: ..., {{end}}
	})

	assert.Nil(t, err)

	assert.Equal(t, &port.{{PascalCase .Inport.ResultType}}{ // {{range .Inport.ResponseFields}}
		// {{.FieldName}}: ..., {{end}}
	}, res)

}

