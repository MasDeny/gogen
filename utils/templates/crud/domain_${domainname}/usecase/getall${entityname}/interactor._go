package getall{{LowerCase .EntityName}}

import (
	"context"
	"{{.PackagePath}}/shared/gogen"
	"{{.PackagePath}}/shared/util"
	"{{.PackagePath}}/domain_{{.DomainName}}/model/repository"
)

//go:generate mockery --name Outport -output mocks/

type {{CamelCase .EntityName}}GetAllInteractor struct {
	outport Outport
}

func NewUsecase(outputPort Outport) gogen.Inport[InportRequest, InportResponse] {
	return &{{CamelCase .EntityName}}GetAllInteractor{
		outport: outputPort,
	}
}

func (r *{{CamelCase .EntityName}}GetAllInteractor) Execute(ctx context.Context, req InportRequest) (*InportResponse, error) {

	res := &InportResponse{}

	{{CamelCase .EntityName}}Obj, count, err := r.outport.FindAll{{PascalCase .EntityName}}(ctx, req.FindAll{{PascalCase .EntityName}}FilterRequest)
	if err != nil {
		return nil, err
	}

	res.Count = count
	res.Items = util.ToSliceAny({{CamelCase .EntityName}}Obj)

	return res, nil
}
