package {{LowerCase .ControllerName}}

import (
	"github.com/gin-gonic/gin"
    "{{.PackagePath}}/shared/gogen"
    "{{.PackagePath}}/shared/infrastructure/config"
	"{{.PackagePath}}/shared/infrastructure/logger"
	"{{.PackagePath}}/shared/infrastructure/token"
)

type selectedRouter = gin.IRouter

type ginController struct {
    *gogen.BaseController[selectedRouter]
	log      logger.Logger
	cfg      *config.Config
	jwtToken token.JWTToken
}

func NewGinController(log logger.Logger, cfg *config.Config, tk token.JWTToken) gogen.RegisterRouterHandler[selectedRouter] {
	return &ginController{
		BaseController: gogen.NewBaseController[selectedRouter](),
		log:            log,
		cfg:            cfg,
		jwtToken:       tk,
	}
}

func (r *ginController) RegisterRouter(router selectedRouter) gogen.RegisterRouterHandler[selectedRouter] {

    resource := router.Group("/api/v1", r.authentication()) {{range .Usecases}} {{if StartWith (LowerCase .Name) "get"}}
    resource.GET("/{{LowerCase .Name}}", r.authorization(), r.{{CamelCase .Name}}Handler()) {{else}}
    resource.POST("/{{LowerCase .Name}}", r.authorization(), r.{{CamelCase .Name}}Handler()) {{end}} {{end}}

    return r
}
